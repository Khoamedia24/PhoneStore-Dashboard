@model PhoneStore.Models.Product
@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mx-auto px-4 pb-10">
    <div class="max-w-5xl mx-auto">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-gray-800">Chi tiết sản phẩm</h2>
            <div class="flex space-x-3">
                <a href="/Product" class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                    </svg>
                    Quay lại
                </a>
                <a href="/Product/Edit/@Model.ProductId" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                    </svg>
                    Chỉnh sửa
                </a>
            </div>
        </div>

        <!-- Thông tin cơ bản -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <div class="flex flex-col md:flex-row">
                <div class="md:w-1/3 mb-6 md:mb-0 md:pr-6">
                    @{
                        var firstImage = Model.ProductImages.FirstOrDefault();
                        var imageUrl = firstImage != null ? $"/Product/GetImage/{firstImage.ImageId}" : "/assets/img/default-product.jpg";
                    }
                    <img id="mainProductImage" src="@imageUrl" alt="@Model.ProductName" class="w-full h-auto rounded-lg object-cover shadow-md">
                    
                    <div class="mt-4 flex flex-wrap gap-2">
                        @foreach (var colorGroup in Model.ProductImages.GroupBy(pi => pi.Color))
                        {
                            if (colorGroup.Key != null)
                            {
                                <button 
                                    class="w-8 h-8 rounded-full border-2 border-white shadow hover:scale-110 transition-transform duration-200"
                                    style="background-color: @colorGroup.Key.ColorName"
                                    title="@colorGroup.Key.ColorName"
                                    onclick="showColorImages(@Model.ProductId, @colorGroup.Key.ColorId)">
                                </button>
                            }
                        }
                    </div>
                </div>
                
                <div class="md:w-2/3">
                    <h3 class="text-2xl font-bold text-gray-800 mb-4">@Model.ProductName</h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-y-4 gap-x-6 mb-6">
                        <div>
                            <p class="text-sm text-gray-600">Danh mục:</p>
                            <p class="font-semibold">@(Model.Category?.CategoryName ?? "Không có")</p>
                        </div>
                        
                        <div>
                            <p class="text-sm text-gray-600">Mã sản phẩm:</p>
                            <p class="font-semibold">#@Model.ProductId</p>
                        </div>
                        
                        <div>
                            <p class="text-sm text-gray-600">Giá gốc:</p>
                            <p class="font-semibold">@String.Format("{0:N0}", Model.Price) ₫</p>
                        </div>
                        
                        @if (Model.Discount != null)
                        {
                            var discountedPrice = Model.Price * (1 - Model.Discount.DiscountPercent / 100m);
                            <div>
                                <p class="text-sm text-gray-600">Giảm giá:</p>
                                <div class="flex items-center">
                                    <span class="font-semibold text-red-600">@Model.Discount.DiscountPercent%</span>
                                    <span class="ml-2 font-semibold">@String.Format("{0:N0}", discountedPrice) ₫</span>
                                </div>
                            </div>
                        }
                        
                        <div>
                            <p class="text-sm text-gray-600">Số lượng tồn kho:</p>
                            <p class="font-semibold">@Model.Stock</p>
                        </div>
                        
                        <div>
                            <p class="text-sm text-gray-600">Khuyến mãi:</p>
                            <p class="font-semibold">@(Model.Discount?.DiscountName ?? "Không có")</p>
                        </div>
                    </div>
                    
                    <div class="mb-6">
                        <p class="text-sm text-gray-600 mb-1">Mô tả ngắn:</p>
                        <p>@Model.ShortDescription</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Mô tả chi tiết -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-6">
            <h3 class="text-xl font-semibold text-gray-800 mb-4">Mô tả chi tiết</h3>
            <div class="prose max-w-none">
                @Html.Raw(Model.DetailDescription?.Replace("\n", "<br>"))
            </div>
        </div>
        
        <!-- Hình ảnh theo màu sắc -->
        <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-xl font-semibold text-gray-800 mb-4">Hình ảnh sản phẩm</h3>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                @foreach (var colorGroup in Model.ProductImages.GroupBy(pi => pi.Color))
                {
                    if (colorGroup.Key != null)
                    {
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-4">
                                <div class="w-6 h-6 rounded-full mr-2" style="background-color: @colorGroup.Key.ColorName"></div>
                                <h4 class="text-lg font-semibold">@colorGroup.Key.ColorName</h4>
                            </div>
                            
                            <div class="grid grid-cols-2 sm:grid-cols-3 gap-4">
                                @foreach (var image in colorGroup)
                                {
                                    <div class="relative group">
                                        <img src="/Product/GetImage/@image.ImageId" alt="@Model.ProductName" class="w-full h-32 object-cover rounded-lg">
                                        <div class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 transition-opacity rounded-lg">
                                            <button onclick="setMainImage('/Product/GetImage/@image.ImageId')" class="p-2 bg-white text-gray-800 rounded-full hover:bg-gray-200">
                                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal for color images -->
<div id="colorModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
    <div class="bg-white rounded-lg max-w-2xl w-full mx-4">
        <div class="p-4 border-b border-gray-200 flex justify-between items-center">
            <h3 class="text-xl font-semibold text-gray-800">Hình ảnh theo màu sắc</h3>
            <button onclick="closeColorModal()" class="text-gray-500 hover:text-gray-700">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
        <div class="p-4">
            <div id="colorImages" class="grid grid-cols-2 md:grid-cols-3 gap-4"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showColorImages(productId, colorId) {
            if (!productId || !colorId) {
                console.error('Thiếu thông tin productId hoặc colorId:', { productId, colorId });
                alert('Không thể hiển thị hình ảnh do thiếu thông tin sản phẩm hoặc màu sắc');
                return;
            }
            
            console.log(`Fetching images for product ${productId}, color ${colorId}`);
            document.getElementById('colorModal').classList.remove('hidden');
            document.getElementById('colorImages').innerHTML = '<div class="flex justify-center items-center p-10"><div class="animate-spin rounded-full h-10 w-10 border-b-2 border-blue-500"></div></div>';
            
            const url = `/Product/GetColorImages?productId=${productId}&colorId=${colorId}`;
            console.log(`Making request to: ${url}`);
            
            fetch(url)
                .then(response => {
                    console.log(`Response status: ${response.status}`);
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (!data.success) {
                        throw new Error(data.message || 'Không lấy được dữ liệu hình ảnh');
                    }
                    
                    const container = document.getElementById('colorImages');
                    container.innerHTML = '';
                    
                    if (!data.images || data.images.length === 0) {
                        container.innerHTML = '<p class="text-center text-gray-500 py-10">Không có hình ảnh nào cho màu này</p>';
                        return;
                    }
                    
                    data.images.forEach(image => {
                        const wrapper = document.createElement('div');
                        wrapper.className = 'relative group';
                        
                        const img = document.createElement('img');
                        img.src = image.imageUrl;
                        img.alt = 'Product color variant';
                        img.className = 'w-full h-48 object-cover rounded-lg cursor-pointer';
                        img.onclick = function() {
                            setMainImage(image.imageUrl);
                            closeColorModal();
                        };
                        
                        wrapper.appendChild(img);
                        container.appendChild(wrapper);
                    });
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('colorImages').innerHTML = 
                        `<p class="text-center text-red-500 py-10">Có lỗi xảy ra khi tải hình ảnh: ${error.message}</p>`;
                });
        }

        function closeColorModal() {
            document.getElementById('colorModal').classList.add('hidden');
        }
        
        function setMainImage(imageUrl) {
            document.getElementById('mainProductImage').src = imageUrl;
        }
    </script>
}
