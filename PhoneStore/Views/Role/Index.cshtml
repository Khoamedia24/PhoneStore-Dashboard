@model IEnumerable<PhoneStore.Models.Role>
@{
    ViewData["Title"] = "Quản lý phân quyền";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
    // Helper function to get color by role name
    string GetRoleColor(string roleName)
    {
        return roleName switch
        {
            "SuperAdmin" => "bg-purple-100 text-purple-800",
            "Admin" => "bg-blue-100 text-blue-800",
            "User" => "bg-green-100 text-green-800",
            _ => "bg-gray-100 text-gray-800"
        };
    }
    
    // Helper function to get permission areas for a role
    IEnumerable<string> GetPermissionAreas(PhoneStore.Models.Role role)
    {
        return role.Permissions
            .Select(p => p.Area)
            .Distinct()
            .OrderBy(a => a);
    }
}
<div class="container mx-auto px-4 pb-6">
    <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold text-gray-800">Quản lý phân quyền</h2>
        <button onclick="showCreateRoleModal()" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
            </svg>
            Thêm vai trò mới
        </button>
    </div>
    
    <!-- Card layout instead of table -->
    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3">
        @foreach (var role in Model)
        {
            var roleColor = GetRoleColor(role.RoleName);
            var permissionAreas = GetPermissionAreas(role);
            
            <div class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 hover:border-blue-300 transition-colors">
                <div class="px-6 py-4 border-b border-gray-200">
                    <div class="flex items-center justify-between mb-2">
                        <div class="flex items-center">
                            <h3 class="text-lg font-semibold text-gray-900">@role.RoleName</h3>
                            @if (role.IsSystem)
                            {
                                <span class="ml-2 px-2 py-1 text-xs font-medium rounded-full @roleColor">
                                    Hệ thống
                                </span>
                            }
                        </div>
                        <div class="flex space-x-2">
                            <a href="@Url.Action("Edit", new { id = role.RoleId })" class="text-blue-600 hover:text-blue-800">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                </svg>
                            </a>
                            @if (!role.IsSystem)
                            {
                                <button onclick="deleteRole(@role.RoleId)" class="text-red-600 hover:text-red-800">
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                    </svg>
                                </button>
                            }
                        </div>
                    </div>
                    <p class="text-sm text-gray-600">@role.Description</p>
                </div>
                
                <div class="px-6 py-3">
                    <div class="flex items-center justify-between mb-3">
                        <div class="text-sm text-gray-500">Người dùng:</div>
                        <div class="flex items-center">
                            <span class="text-sm font-medium text-gray-900">@role.Admins.Count</span>
                            <span class="ml-1 text-xs text-gray-500">tài khoản</span>
                        </div>
                    </div>
                    <div class="flex items-center justify-between mb-3">
                        <div class="text-sm text-gray-500">Quyền:</div>
                        <div class="flex items-center">
                            <span class="text-sm font-medium text-gray-900">@role.Permissions.Count</span>
                            <span class="ml-1 text-xs text-gray-500">quyền</span>
                        </div>
                    </div>
                </div>
                
                @if (permissionAreas.Any())
                {
                    <div class="px-6 py-3 bg-gray-50 border-t border-gray-200">
                        <div class="text-xs text-gray-500 mb-2">Khu vực quản lý:</div>
                        <div class="flex flex-wrap gap-2">
                            @foreach (var area in permissionAreas)
                            {
                                <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-gray-100 text-gray-800">
                                    @area
                                </span>
                            }
                        </div>
                    </div>
                }
                
                <div class="px-6 py-3 border-t border-gray-200">
                    <a href="@Url.Action("Edit", new { id = role.RoleId })" class="inline-block w-full px-4 py-2 bg-blue-50 hover:bg-blue-100 text-blue-700 text-center text-sm font-medium rounded-md transition-colors">
                        Cấu hình quyền
                    </a>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal tạo role mới -->
<div id="createRoleModal" class="hidden fixed z-10 inset-0 overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <form id="createRoleForm" asp-action="Create" method="post">
                <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10">
                            <svg class="h-6 w-6 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                            </svg>
                        </div>
                        <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                            <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
                                Tạo vai trò mới
                            </h3>
                            <div class="mt-4 space-y-4">
                                <div>
                                    <label for="roleName" class="block text-sm font-medium text-gray-700">Tên vai trò</label>
                                    <input type="text" name="RoleName" id="roleName" required class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md">
                                </div>
                                <div>
                                    <label for="description" class="block text-sm font-medium text-gray-700">Mô tả</label>
                                    <textarea name="Description" id="description" rows="3" class="mt-1 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                    <button type="submit" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm">
                        Tạo vai trò
                    </button>
                    <button type="button" onclick="hideCreateRoleModal()" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                        Hủy
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showCreateRoleModal() {
            document.getElementById('createRoleModal').classList.remove('hidden');
        }
        
        function hideCreateRoleModal() {
            document.getElementById('createRoleModal').classList.add('hidden');
        }
        
        function deleteRole(roleId) {
            if (confirm('Bạn có chắc chắn muốn xóa vai trò này?')) {
                fetch(`/Role/Delete/${roleId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message || 'Có lỗi xảy ra khi xóa vai trò');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra khi xóa vai trò');
                });
            }
        }
    </script>
}
