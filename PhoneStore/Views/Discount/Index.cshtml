@using PhoneStore.ViewModels
@model PaginatedList<PhoneStore.Models.DiscountProgram>
@{
    ViewData["Title"] = "Quản lý chương trình giảm giá";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentFilter = ViewData["CurrentFilter"]?.ToString() ?? "";
    var currentSort = ViewData["CurrentSort"]?.ToString() ?? "";
}

<div class="container mx-auto px-4">
    <div class="bg-white rounded-lg shadow-md p-6">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-gray-800">Quản lý chương trình giảm giá</h2>
            <div class="flex items-center space-x-4">
                <form asp-action="Index" method="get" class="flex items-center">
                    <input type="text" name="searchString" value="@currentFilter" 
                           placeholder="Tìm kiếm..."
                           class="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    <button type="submit" class="ml-2 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </button>
                    @if (!string.IsNullOrEmpty(currentFilter))
                    {
                        <a asp-action="Index" class="ml-2 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg">Xóa bộ lọc</a>
                    }
                </form>
                <button onclick="showAddModal()" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg flex items-center">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                    </svg>
                    Thêm chương trình mới
                </button>
            </div>
        </div>

        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]" asp-route-currentFilter="@currentFilter"
                               class="flex items-center space-x-1 hover:text-gray-700">
                                <span>Tên chương trình</span>
                                @if (currentSort == "name_desc")
                                {
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                    </svg>
                                }
                                else
                                {
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7"></path>
                                    </svg>
                                }
                            </a>
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["PercentSortParam"]" asp-route-currentFilter="@currentFilter"
                               class="flex items-center space-x-1 hover:text-gray-700">
                                <span>Phần trăm giảm</span>
                                @if (currentSort == "percent_desc")
                                {
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                                    </svg>
                                }
                                else if (currentSort == "percent")
                                {
                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7"></path>
                                    </svg>
                                }
                            </a>
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Số sản phẩm</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thao tác</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var discount in Model)
                    {
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">@discount.DiscountId</td>
                            <td class="px-6 py-4 whitespace-nowrap">@discount.DiscountName</td>
                            <td class="px-6 py-4 whitespace-nowrap">@discount.DiscountPercent%</td>
                            <td class="px-6 py-4 whitespace-nowrap">@discount.Products.Count</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <button onclick="showEditModal(@discount.DiscountId, '@discount.DiscountName', @discount.DiscountPercent)" 
                                        class="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-lg mr-2">
                                    Sửa
                                </button>
                                <button onclick="deleteDiscount(@discount.DiscountId)" 
                                        class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-lg">
                                    Xóa
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @{
            var prevDisabled = !Model.HasPreviousPage ? "opacity-50 cursor-not-allowed" : "";
            var nextDisabled = !Model.HasNextPage ? "opacity-50 cursor-not-allowed" : "";
        }

        <div class="flex justify-between items-center mt-4">
            <div>
                Trang @Model.PageIndex trên @Model.TotalPages
            </div>
            <div class="flex space-x-2">
                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@currentFilter"
                   asp-route-sortOrder="@currentSort"
                   class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 @prevDisabled">
                    Trước
                </a>
                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@currentFilter"
                   asp-route-sortOrder="@currentSort"
                   class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 @nextDisabled">
                    Sau
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Modal thêm/sửa chương trình giảm giá -->
<div id="discountModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg font-medium text-gray-900" id="modalTitle">Thêm chương trình giảm giá</h3>
            <form id="discountForm" class="mt-4">
                @Html.AntiForgeryToken()
                <input type="hidden" id="discountId" name="discountId" value="" />
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700">Tên chương trình</label>
                    <input type="text" id="discountName" name="discountName" required
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                </div>
                <div class="mb-4">
                    <label class="block text-sm font-medium text-gray-700">Phần trăm giảm</label>
                    <input type="number" id="discountPercent" name="discountPercent" required
                           min="1" max="100"
                           class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                </div>
                <div class="mt-5 flex justify-end">
                    <button type="button" onclick="closeModal()"
                            class="mr-3 px-4 py-2 bg-gray-300 text-gray-700 rounded-lg hover:bg-gray-400">
                        Hủy
                    </button>
                    <button type="submit"
                            class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
                        Lưu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showAddModal() {
            document.getElementById('modalTitle').textContent = 'Thêm chương trình giảm giá';
            document.getElementById('discountId').value = '';
            document.getElementById('discountName').value = '';
            document.getElementById('discountPercent').value = '';
            document.getElementById('discountModal').classList.remove('hidden');
        }

        function showEditModal(id, name, percent) {
            document.getElementById('modalTitle').textContent = 'Sửa chương trình giảm giá';
            document.getElementById('discountId').value = id;
            document.getElementById('discountName').value = name;
            document.getElementById('discountPercent').value = percent;
            document.getElementById('discountModal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('discountModal').classList.add('hidden');
        }

        document.getElementById('discountForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const id = document.getElementById('discountId').value;
            const discountName = document.getElementById('discountName').value;
            const discountPercent = document.getElementById('discountPercent').value;

            if (!discountName || !discountPercent) {
                alert('Vui lòng nhập đầy đủ thông tin');
                return;
            }

            const percent = parseInt(discountPercent);
            if (isNaN(percent) || percent < 1 || percent > 100) {
                alert('Phần trăm giảm giá phải từ 1 đến 100');
                return;
            }

            const data = {
                discountId: id || 0,
                discountName: discountName,
                discountPercent: percent
            };
            
            const url = id ? '/Discount/Edit' : '/Discount/Create';
            const method = id ? 'PUT' : 'POST';

            fetch(url, {
                method: method,
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Có lỗi xảy ra');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi lưu chương trình giảm giá');
            });
        });

        function deleteDiscount(id) {
            if (!confirm('Bạn có chắc chắn muốn xóa chương trình giảm giá này?')) {
                return;
            }

            fetch(`/Discount/Delete/${id}`, {
                method: 'DELETE',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert(data.message || 'Có lỗi xảy ra khi xóa chương trình giảm giá');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi xóa chương trình giảm giá');
            });
        }
    </script>
}
